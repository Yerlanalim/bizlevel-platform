'use client'
import { useState, useEffect } from 'react'
import { supabase } from '@/utils/supabaseClient'
import { User } from '@supabase/supabase-js'
import { Star, Medal, Trophy, ChevronRight } from 'lucide-react'
import Link from 'next/link'

// –¢–∏–ø –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
type Profile = {
  id: string;
  full_name?: string;
  role?: string;
  business_info?: {
    type: string;
    employees: number;
    revenue: string;
  };
  goals?: string[];
  skills?: string[];
  level_progress?: {
    completed: number;
    total: number;
  };
  achievements?: {
    title: string;
    icon: string;
  }[];
}

export default function Profile() {
  const [user, setUser] = useState<User | null>(null)
  const [profile, setProfile] = useState<Profile | null>(null)
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    const getUser = async () => {
      const { data: { user } } = await supabase.auth.getUser()
      
      if (user) {
        setUser(user)
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã profiles
        const { data: profileData } = await supabase
          .from('profiles')
          .select('*')
          .eq('id', user.id)
          .single()
        
        // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
        // –ò–Ω–∞—á–µ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
        if (profileData) {
          setProfile(profileData)
        } else {
          setProfile({
            id: user.id,
            full_name: '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
            role: 'Ambitious',
            business_info: {
              type: '–ü–µ–∫–∞—Ä–Ω—è',
              employees: 5,
              revenue: '10–º–ª–Ω —Ç–≥/–º–µ—Å'
            },
            goals: [
              '–í—ã–π—Ç–∏ –≤ —Å—Ç–∞–±–∏–ª—å–Ω—É—é –ø—Ä–∏–±—ã–ª—å',
              '–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ë–∏–∑–Ω–µ—Å –ø—Ä–æ—Ñ–∏–ª—è'
            ],
            skills: [
              '–õ–∏—á–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ',
              '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
              '–ù–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥ –∏ —Å–≤—è–∑–∏',
              '–†–∞–±–æ—Ç–∞ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏',
              '–§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
              '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–µ –∏ —é—Ä-–µ –≤–æ–ø—Ä–æ—Å—ã'
            ],
            level_progress: {
              completed: 9,
              total: 10
            },
            achievements: [
              { title: 'Star Performer', icon: '‚≠ê' },
              { title: 'Silver Medalist', icon: 'üèÖ' }
            ]
          })
        }
      }
      
      setLoading(false)
    }
    
    getUser()
  }, [])

  if (loading) {
    return (
      <div className="flex min-h-screen items-center justify-center">
        <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-teal-500"></div>
      </div>
    )
  }

  return (
    <div className="max-w-3xl mx-auto p-6 font-sans">
      {/* –®–∞–ø–∫–∞ —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π */}
      <div className="flex justify-between items-center mb-5">
        <div className="text-xl font-bold text-teal-600">BizLevel</div>
        <nav className="flex space-x-4">
          <Link href="/dashboard/profile" className="text-teal-600 hover:text-teal-800">
            –í –ü—Ä–æ—Ñ–∏–ª—å
          </Link>
          <Link href="/dashboard/artifacts" className="text-teal-600 hover:text-teal-800">
            –í –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã
          </Link>
          <Link href="/dashboard/chat" className="text-gray-600 hover:text-gray-800">
            –ß–∞—Ç
          </Link>
        </nav>
      </div>

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ—Ñ–∏–ª—è */}
      <div className="text-center mb-8">
        <h1 className="text-2xl font-bold text-gray-800">{profile?.full_name}</h1>
        <p className="text-gray-600">{profile?.role}</p>
      </div>

      {/* –ë–∏–∑–Ω–µ—Å-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="bg-white rounded-lg shadow-md p-6 mb-6">
        <h2 className="text-lg font-semibold mb-3">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∏–∑–Ω–µ—Å–µ</h2>
        <p className="text-gray-700">
          {profile?.business_info?.type}, {profile?.business_info?.employees} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, 
          –≤—ã—Ä—É—á–∫–∞ - {profile?.business_info?.revenue}
        </p>
        <div className="mt-4">
          <p className="text-gray-600 font-medium">–û—Å–Ω–æ–≤–Ω—ã–µ —Ü–µ–ª–∏:</p>
          <ul className="mt-2 space-y-1 text-gray-600 italic">
            {profile?.goals?.map((goal, index) => (
              <li key={index}>{index + 1}. {goal}</li>
            ))}
          </ul>
        </div>
      </div>

      {/* –°–µ–∫—Ü–∏—è –Ω–∞–≤—ã–∫–æ–≤ */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
        <div className="bg-teal-50 p-6 rounded-lg">
          <h3 className="font-semibold text-teal-800 mb-4">–ù–∞–≤—ã–∫–∏</h3>
          <ul className="space-y-2">
            {profile?.skills?.map((skill, index) => (
              <li key={index} className="flex items-center text-gray-700">
                <ChevronRight className="h-4 w-4 text-teal-500 mr-2" />
                {skill}
              </li>
            ))}
          </ul>
        </div>
      </div>

      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
      <div className="bg-white rounded-lg shadow-md p-6 mb-6">
        <h3 className="font-semibold text-gray-800 mb-3">–ü—Ä–æ–≥—Ä–µ—Å—Å</h3>
        <div className="w-full bg-gray-200 rounded-full h-2.5 mb-2">
          <div 
            className="bg-teal-500 h-2.5 rounded-full transition-all duration-500" 
            style={{ width: `${(profile?.level_progress?.completed || 0) / (profile?.level_progress?.total || 1) * 100}%` }}
          ></div>
        </div>
        <p className="text-gray-700 text-sm">
          –í—ã –ø—Ä–æ—à–ª–∏ {profile?.level_progress?.completed} —É—Ä–æ–≤–Ω–µ–π –∏–∑ {profile?.level_progress?.total} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö
        </p>
      </div>

      {/* –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
      <div className="flex justify-around mb-6">
        {profile?.achievements?.map((achievement, index) => (
          <div key={index} className="text-center">
            <span className="block text-2xl mb-2">{achievement.icon}</span>
            <p className="text-gray-700">{achievement.title}</p>
          </div>
        ))}
      </div>
    </div>
  )
}
