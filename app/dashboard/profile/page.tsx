'use client'
import { useState, useEffect } from 'react'
import { supabase } from '@/utils/supabaseClient'
import { Edit, Phone, Mail, Globe, Info } from 'lucide-react'
import Image from 'next/image'

// –¢–∏–ø –¥–ª—è –Ω–∞–≤—ã–∫–∞
type Skill = {
  name: string;
  level: number;
  maxLevel: number;
  tooltips: string[];
}

// –¢–∏–ø –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
type Achievement = {
  title: string;
  icon: string;
  description: string;
}

// –¢–∏–ø –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
type Profile = {
  id: string;
  full_name?: string;
  avatar_url?: string;
  role?: string;
  business_info?: {
    type: string;
    employees: number;
    revenue: string;
  };
  goals?: string[];
  skills?: Skill[];
  level_progress?: {
    completed: number;
    total: number;
  };
  achievements?: Achievement[];
  contacts?: {
    phone?: string;
    email?: string;
    social?: string[];
  };
}

// –Ø–≤–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è
export default function Profile() {
  const [profile, setProfile] = useState<Profile | null>(null)
  const [loading, setLoading] = useState(true)
  const [activeTooltip, setActiveTooltip] = useState<{skillIndex: number, levelIndex: number} | null>(null)

  useEffect(() => {
    const getUser = async () => {
      const { data: { user } } = await supabase.auth.getUser()
      
      if (user) {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã profiles
        const { data: profileData } = await supabase
          .from('profiles')
          .select('*')
          .eq('id', user.id)
          .single()
        
        // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
        // –ò–Ω–∞—á–µ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
        if (profileData) {
          setProfile(profileData)
        } else {
          setProfile({
            id: user.id,
            full_name: '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
            avatar_url: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?q=80&w=250',
            role: 'Ambitious',
            business_info: {
              type: '–ü–µ–∫–∞—Ä–Ω—è',
              employees: 5,
              revenue: '10–º–ª–Ω —Ç–≥/–º–µ—Å'
            },
            goals: [
              '–í—ã–π—Ç–∏ –≤ —Å—Ç–∞–±–∏–ª—å–Ω—É—é –ø—Ä–∏–±—ã–ª—å',
              '–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ë–∏–∑–Ω–µ—Å –ø—Ä–æ—Ñ–∏–ª—è'
            ],
            skills: [
              {
                name: '–õ–∏—á–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ',
                level: 7,
                maxLevel: 10,
                tooltips: [
                  '–ü—Ä–æ–π–¥–∏—Ç–µ —Ç–µ—Å—Ç –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞',
                  '–°–æ—Å—Ç–∞–≤—å—Ç–µ –ø–ª–∞–Ω –ª–∏—á–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è',
                  '–ò–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤—ã —Ç–∞–π–º-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞',
                  '–ü—Ä–æ–π–¥–∏—Ç–µ –∫—É—Ä—Å –ø–æ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º—É –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É',
                  '–û—Å–≤–æ–π—Ç–µ —Ç–µ—Ö–Ω–∏–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏',
                  '–ù–∞—É—á–∏—Ç–µ—Å—å –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏',
                  '–†–∞–∑–≤–∏–≤–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏ –ø—É–±–ª–∏—á–Ω—ã—Ö –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–π',
                  '–ò–∑—É—á–∏—Ç–µ –º–µ—Ç–æ–¥—ã –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π',
                  '–û—Å–≤–æ–π—Ç–µ —Ç–µ—Ö–Ω–∏–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–µ—Å—Å–æ–º',
                  '–°—Ç–∞–Ω—å—Ç–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º –¥–ª—è –¥—Ä—É–≥–∏—Ö'
                ]
              },
              {
                name: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
                level: 5,
                maxLevel: 10,
                tooltips: [
                  '–°–æ—Å—Ç–∞–≤—å—Ç–µ –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω',
                  '–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
                  '–í–Ω–µ–¥—Ä–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏',
                  '–ù–∞—É—á–∏—Ç–µ—Å—å –ø—Ä–æ–≤–æ–¥–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–≤–µ—â–∞–Ω–∏—è',
                  '–†–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é —Ä–∞–∑–≤–∏—Ç–∏—è –±–∏–∑–Ω–µ—Å–∞',
                  '–í–Ω–µ–¥—Ä–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –∫–æ–Ω—Ç—Ä–æ–ª—è –∫–∞—á–µ—Å—Ç–≤–∞',
                  '–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã',
                  '–†–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º—É –º–æ—Ç–∏–≤–∞—Ü–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
                  '–í–Ω–µ–¥—Ä–∏—Ç–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
                  '–°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—É—é –±–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª—å'
                ]
              },
              {
                name: '–ù–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥ –∏ —Å–≤—è–∑–∏',
                level: 3,
                maxLevel: 10,
                tooltips: [
                  '–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –≤ –¥–µ–ª–æ–≤—ã—Ö —Å–æ—Ü—Å–µ—Ç—è—Ö',
                  '–ü–æ—Å–µ—Ç–∏—Ç–µ –±–∏–∑–Ω–µ—Å-–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ',
                  '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ 5 –Ω–æ–≤—ã—Ö –¥–µ–ª–æ–≤—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤',
                  '–í—Å—Ç—É–ø–∏—Ç–µ –≤ –±–∏–∑–Ω–µ—Å-—Å–æ–æ–±—â–µ—Å—Ç–≤–æ',
                  '–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é —Å–≤–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞',
                  '–ù–∞–π–¥–∏—Ç–µ –º–µ–Ω—Ç–æ—Ä–∞ –≤ —Å–≤–æ–µ–π –æ—Ç—Ä–∞—Å–ª–∏',
                  '–°—Ç–∞–Ω—å—Ç–µ —Å–ø–∏–∫–µ—Ä–æ–º –Ω–∞ –æ—Ç—Ä–∞—Å–ª–µ–≤–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏',
                  '–°–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ —Å –¥—Ä—É–≥–∏–º –±–∏–∑–Ω–µ—Å–æ–º',
                  '–û—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥-–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ',
                  '–°—Ç–∞–Ω—å—Ç–µ –ª–∏–¥–µ—Ä–æ–º –º–Ω–µ–Ω–∏–π –≤ —Å–≤–æ–µ–π –Ω–∏—à–µ'
                ]
              },
              {
                name: '–†–∞–±–æ—Ç–∞ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏',
                level: 8,
                maxLevel: 10,
                tooltips: [
                  '–°–æ–∑–¥–∞–π—Ç–µ –ø–æ—Ä—Ç—Ä–µ—Ç –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞',
                  '–†–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–¥–∞–∂',
                  '–í–Ω–µ–¥—Ä–∏—Ç–µ CRM-—Å–∏—Å—Ç–µ–º—É',
                  '–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤',
                  '–†–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏',
                  '–í–Ω–µ–¥—Ä–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤',
                  '–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –≤–æ—Ä–æ–Ω–∫—É –ø—Ä–æ–¥–∞–∂',
                  '–†–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é —É–¥–µ—Ä–∂–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤',
                  '–í–Ω–µ–¥—Ä–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞',
                  '–°–æ–∑–¥–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º—É —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤'
                ]
              },
              {
                name: '–§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
                level: 6,
                maxLevel: 10,
                tooltips: [
                  '–°–æ—Å—Ç–∞–≤—å—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–ª–∞–Ω',
                  '–í–Ω–µ–¥—Ä–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É —É—á–µ—Ç–∞ –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤',
                  '–†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —Ç–æ—á–∫—É –±–µ–∑—É–±—ã—Ç–æ—á–Ω–æ—Å—Ç–∏',
                  '–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏–µ',
                  '–†–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é',
                  '–í–Ω–µ–¥—Ä–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ–Ω–µ–∂–Ω—ã–º–∏ –ø–æ—Ç–æ–∫–∞–º–∏',
                  '–ü—Ä–æ–≤–µ–¥–∏—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞—É–¥–∏—Ç',
                  '–†–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è',
                  '–ü—Ä–∏–≤–ª–µ–∫–∏—Ç–µ –≤–Ω–µ—à–Ω–µ–µ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ',
                  '–°–æ–∑–¥–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º—É —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è'
                ]
              },
              {
                name: '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–µ –∏ —é—Ä-–µ –≤–æ–ø—Ä–æ—Å—ã',
                level: 4,
                maxLevel: 10,
                tooltips: [
                  '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ-–ø—Ä–∞–≤–æ–≤—É—é —Ñ–æ—Ä–º—É',
                  '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –±–∏–∑–Ω–µ—Å',
                  '–û—Ñ–æ—Ä–º–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏ –ª–∏—Ü–µ–Ω–∑–∏–∏',
                  '–ó–∞–∫–ª—é—á–∏—Ç–µ –¥–æ–≥–æ–≤–æ—Ä—ã —Å –∫–ª—é—á–µ–≤—ã–º–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏',
                  '–†–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã',
                  '–ó–∞—â–∏—Ç–∏—Ç–µ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—É—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å',
                  '–í–Ω–µ–¥—Ä–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –∫–æ–º–ø–ª–∞–µ–Ω—Å',
                  '–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –¥–æ–≥–æ–≤–æ—Ä–Ω—É—é —Ä–∞–±–æ—Ç—É',
                  '–†–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∏—Å–∫–∞–º–∏',
                  '–°–æ–∑–¥–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º—É –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è'
                ]
              }
            ],
            level_progress: {
              completed: 9,
              total: 10
            },
            achievements: [
              { 
                title: 'Star Performer', 
                icon: '‚≠ê', 
                description: '–î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–¥–∞–Ω–∏–π –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è —Å –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏'
              },
              { 
                title: 'Silver Medalist', 
                icon: 'üèÖ', 
                description: '–ü–æ–ª—É—á–µ–Ω–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ 5 —É—Ä–æ–≤–Ω–µ–π –ø–æ–¥—Ä—è–¥ –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–∞'
              }
            ],
            contacts: {
              phone: '',
              email: user.email,
              social: []
            }
          })
        }
      }
      
      setLoading(false)
    }
    
    getUser()
  }, [])

  const handleTooltip = (skillIndex: number, levelIndex: number) => {
    setActiveTooltip({skillIndex, levelIndex});
  }

  const hideTooltip = () => {
    setActiveTooltip(null);
  }

  if (loading) {
    return (
      <div className="flex min-h-screen items-center justify-center">
        <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-teal-500"></div>
      </div>
    )
  }

  return (
    <div className="max-w-4xl mx-auto p-6 font-sans">
      {/* –®–∞–ø–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è */}
      <div className="bg-white rounded-lg shadow-md p-6 mb-6">
        <div className="flex flex-col md:flex-row items-center">
          <div className="relative w-24 h-24 md:w-32 md:h-32 rounded-full overflow-hidden mb-4 md:mb-0 md:mr-6">
            {profile?.avatar_url ? (
              <Image 
                src={profile.avatar_url} 
                alt="–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                fill
                className="object-cover"
              />
            ) : (
              <div className="w-full h-full bg-gray-200 flex items-center justify-center">
                <span className="text-4xl">üë§</span>
              </div>
            )}
          </div>
          <div className="text-center md:text-left">
            <h1 className="text-2xl font-bold text-gray-800">{profile?.full_name}</h1>
            <p className="text-gray-600 mb-2">{profile?.role}</p>
          </div>
        </div>
      </div>

      {/* –ë–∏–∑–Ω–µ—Å-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="bg-white rounded-lg shadow-md p-6 mb-6">
        <h2 className="text-lg font-semibold mb-3">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∏–∑–Ω–µ—Å–µ</h2>
        <p className="text-gray-700 mb-4">
          {profile?.business_info?.type}, {profile?.business_info?.employees} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, 
          –≤—ã—Ä—É—á–∫–∞ - {profile?.business_info?.revenue}
        </p>
        <div className="mb-4">
          <p className="text-gray-600 font-medium mb-2">–û—Å–Ω–æ–≤–Ω—ã–µ —Ü–µ–ª–∏:</p>
          <ul className="space-y-1 text-gray-600">
            {profile?.goals?.map((goal, index) => (
              <li key={index} className="flex items-start">
                <span className="mr-2">{index + 1}.</span>
                <span>{goal}</span>
              </li>
            ))}
          </ul>
        </div>
        <button className="flex items-center text-teal-600 hover:text-teal-800 transition-colors">
          <Edit className="h-4 w-4 mr-1" />
          –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ë–∏–∑–Ω–µ—Å –ø—Ä–æ—Ñ–∏–ª—è
        </button>
      </div>

      {/* –°–µ–∫—Ü–∏—è –Ω–∞–≤—ã–∫–æ–≤ */}
      <div className="bg-white rounded-lg shadow-md p-6 mb-6">
        <h2 className="text-lg font-semibold mb-4">–ù–∞–≤—ã–∫–∏</h2>
        <div className="space-y-6">
          {profile?.skills?.map((skill, skillIndex) => (
            <div key={skillIndex}>
              <div className="flex justify-between items-center mb-2">
                <p className="text-gray-700">{skill.name}</p>
                <p className="text-sm text-gray-500">{skill.level}/{skill.maxLevel}</p>
              </div>
              <div className="flex space-x-1">
                {[...Array(skill.maxLevel)].map((_, levelIndex) => (
                  <div 
                    key={levelIndex}
                    className="relative"
                    onMouseEnter={() => handleTooltip(skillIndex, levelIndex)}
                    onMouseLeave={hideTooltip}
                  >
                    <div 
                      className={`h-3 w-3 rounded-full ${levelIndex < skill.level ? 'bg-teal-500' : 'bg-gray-300'}`}
                    ></div>
                    {activeTooltip && 
                     activeTooltip.skillIndex === skillIndex && 
                     activeTooltip.levelIndex === levelIndex && (
                      <div className="absolute z-10 bottom-full left-1/2 transform -translate-x-1/2 mb-2 w-48 p-2 bg-gray-800 text-white text-xs rounded shadow-lg">
                        <p>{skill.tooltips[levelIndex]}</p>
                      </div>
                    )}
                  </div>
                ))}
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
      <div className="bg-white rounded-lg shadow-md p-6 mb-6">
        <h3 className="font-semibold text-gray-800 mb-3">–ü—Ä–æ–≥—Ä–µ—Å—Å</h3>
        <div className="w-full bg-gray-200 rounded-full h-2.5 mb-2">
          <div 
            className="bg-teal-500 h-2.5 rounded-full transition-all duration-500" 
            style={{ width: `${(profile?.level_progress?.completed || 0) / (profile?.level_progress?.total || 1) * 100}%` }}
          ></div>
        </div>
        <p className="text-gray-700 text-sm">
          –í—ã –ø—Ä–æ—à–ª–∏ {profile?.level_progress?.completed} —É—Ä–æ–≤–Ω–µ–π –∏–∑ {profile?.level_progress?.total} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö
        </p>
      </div>

      {/* –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
      <div className="bg-white rounded-lg shadow-md p-6 mb-6">
        <h3 className="font-semibold text-gray-800 mb-4">–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h3>
        <div className="flex justify-around">
          {profile?.achievements?.map((achievement, index) => (
            <div key={index} className="text-center cursor-pointer group relative">
              <span className="block text-3xl mb-2">{achievement.icon}</span>
              <p className="text-gray-700">{achievement.title}</p>
              
              {/* –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
              <div className="opacity-0 group-hover:opacity-100 transition-opacity duration-300 absolute z-10 bottom-full left-1/2 transform -translate-x-1/2 mb-2 w-48 p-3 bg-white text-gray-800 text-sm rounded shadow-lg border border-gray-200">
                <p>{achievement.description}</p>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* –õ–∏—á–Ω—ã–µ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
      <div className="bg-white rounded-lg shadow-md p-6">
        <div className="flex justify-between items-center mb-4">
          <h3 className="font-semibold text-gray-800">–õ–∏—á–Ω—ã–µ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h3>
          <button className="text-teal-600 hover:text-teal-800 transition-colors">
            <Edit className="h-4 w-4" />
          </button>
        </div>
        
        {profile?.contacts?.phone || profile?.contacts?.email || (profile?.contacts?.social && profile.contacts.social.length > 0) ? (
          <div className="space-y-3">
            {profile.contacts.phone && (
              <div className="flex items-center text-gray-600">
                <Phone className="h-4 w-4 mr-2" />
                <span>{profile.contacts.phone}</span>
              </div>
            )}
            {profile.contacts.email && (
              <div className="flex items-center text-gray-600">
                <Mail className="h-4 w-4 mr-2" />
                <span>{profile.contacts.email}</span>
              </div>
            )}
            {profile.contacts.social && profile.contacts.social.map((social, index) => (
              <div key={index} className="flex items-center text-gray-600">
                <Globe className="h-4 w-4 mr-2" />
                <span>{social}</span>
              </div>
            ))}
          </div>
        ) : (
          <div className="flex items-center text-gray-500">
            <Info className="h-4 w-4 mr-2" />
            <span>–î–æ–±–∞–≤—å—Ç–µ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã</span>
          </div>
        )}
      </div>
    </div>
  )
}
